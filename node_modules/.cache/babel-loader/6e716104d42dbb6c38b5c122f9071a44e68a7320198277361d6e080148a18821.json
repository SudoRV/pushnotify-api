{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useSearchParams}from\"react-router-dom\";import{jwtDecode}from\"jwt-decode\";import Navbar from\"../components/Navbar\";import Sidebar from\"../components/Sidebar\";import\"../styles/ResetPassword.scss\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetPassword=()=>{const[searchParams]=useSearchParams();const[password,setPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const[response,setResponse]=useState(\"\");const[email,setEmail]=useState(null);const[tokenValid,setTokenValid]=useState(true);useEffect(()=>{const token=searchParams.get(\"token\");if(!token){setResponse(\"Invalid reset token.\");setTokenValid(false);return;}try{const decoded=jwtDecode(token);const expiration=decoded.exp*1000;const now=Date.now();if(now>expiration){setResponse(\"Reset token has expired.\");setTokenValid(false);}else{setEmail(decoded.email);setTokenValid(true);}}catch(err){setResponse(\"Invalid reset token.\");setTokenValid(false);}},[searchParams]);const handleSubmit=async e=>{e.preventDefault();setResponse(\"\");if(password!==confirmPassword){setResponse(\"Passwords do not match.\");return;}const BASE_URL=\"https://inlmqkmxchdb5df6t3gjdqzpqi0jrfmc.lambda-url.eu-north-1.on.aws/\";try{const res=await fetch(BASE_URL,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({type:\"reset-password\",token:searchParams.get(\"token\"),email,password})});const response=await res.json();if(response.success){setResponse(\"Password reset successfully!\");await alert(\"Password reset successfully!\");setTimeout(()=>{window.close();},2000);}else{setResponse(response.message);}}catch(err){setResponse(\"Failed to reset password.\"+err);}};const[isSidebarOpen,setSidebarOpen]=useState(false);return/*#__PURE__*/_jsxs(\"div\",{className:\"h100 flex fdc\",children:[/*#__PURE__*/_jsx(Navbar,{toggleSidebar:()=>setSidebarOpen(!isSidebarOpen)}),/*#__PURE__*/_jsx(Sidebar,{isOpen:isSidebarOpen,toggleSidebar:()=>setSidebarOpen(false)}),/*#__PURE__*/_jsx(\"div\",{className:\"reset-password-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"reset-password-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reset Password\"}),response&&/*#__PURE__*/_jsx(\"p\",{className:response.includes(\"successfully\")?\"message\":\"expired-message\",children:response}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"New Password\",value:password,onChange:e=>setPassword(e.target.value),required:true,disabled:!tokenValid,className:!tokenValid?\"disabled\":\"\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm Password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true,disabled:!tokenValid,className:!tokenValid?\"disabled\":\"\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:`submit-btn ${!tokenValid?\"disabled\":\"\"}`,disabled:!tokenValid,children:\"Reset Password\"})]})]})})]});};export default ResetPassword;","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","jwtDecode","Navbar","Sidebar","jsx","_jsx","jsxs","_jsxs","ResetPassword","searchParams","password","setPassword","confirmPassword","setConfirmPassword","response","setResponse","email","setEmail","tokenValid","setTokenValid","token","get","decoded","expiration","exp","now","Date","err","handleSubmit","e","preventDefault","BASE_URL","res","fetch","method","headers","body","JSON","stringify","type","json","success","alert","setTimeout","window","close","message","isSidebarOpen","setSidebarOpen","className","children","toggleSidebar","isOpen","includes","onSubmit","placeholder","value","onChange","target","required","disabled"],"sources":["/data/data/com.termux/files/home/jWTFcm/clients/pushnotify-api/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\n\nimport Navbar from \"../components/Navbar\";\nimport Sidebar from \"../components/Sidebar\";\n\nimport \"../styles/ResetPassword.scss\";\n\nconst ResetPassword = () => {\n    const [searchParams] = useSearchParams();\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [response, setResponse] = useState(\"\");\n    const [email, setEmail] = useState(null);\n    const [tokenValid, setTokenValid] = useState(true);\n\n    useEffect(() => {\n        const token = searchParams.get(\"token\");\n\n        if (!token) {\n            setResponse(\"Invalid reset token.\");\n            setTokenValid(false);\n            return;\n        }\n\n        try {\n            const decoded = jwtDecode(token);\n            const expiration = decoded.exp * 1000;\n            const now = Date.now();\n\n            if (now > expiration) {\n                setResponse(\"Reset token has expired.\");\n                setTokenValid(false);\n            } else {\n                setEmail(decoded.email);\n                setTokenValid(true);\n            }\n        } catch (err) {\n            setResponse(\"Invalid reset token.\");\n            setTokenValid(false);\n        }\n    }, [searchParams]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setResponse(\"\");\n\n        if (password !== confirmPassword) {\n            setResponse(\"Passwords do not match.\");\n            return;\n        }\n        \n        const BASE_URL = \"https://inlmqkmxchdb5df6t3gjdqzpqi0jrfmc.lambda-url.eu-north-1.on.aws/\";\n\n        try {\n            const res = await fetch(BASE_URL, {\n                method:\"POST\",\n                headers:{\n                    \"Content-Type\": \"application/json\",\n                },\n                body:JSON.stringify({\n                    type: \"reset-password\",\n                    token: searchParams.get(\"token\"),                \n                    email,\n                    password,\n                })              \n            });   \n            \n            const response = await res.json();            \n                                                             \n            if (response.success) {\n                setResponse(\"Password reset successfully!\")\n                await alert(\"Password reset successfully!\");               \n                setTimeout(()=>{\n                    window.close();\n                },2000)\n            } else {\n                setResponse(response.message);\n            }\n        } catch (err) {\n            setResponse(\"Failed to reset password.\"+err);\n        }\n    };\n    \n    const [isSidebarOpen, setSidebarOpen] = useState(false);\n\n    return (\n        <div className=\"h100 flex fdc\">\n         <Navbar toggleSidebar={() => setSidebarOpen(!isSidebarOpen)} />\n         <Sidebar isOpen={isSidebarOpen} toggleSidebar={() => setSidebarOpen(false)} />\n          \n        <div className=\"reset-password-container\">\n            <div className=\"reset-password-box\">\n                <h2>Reset Password</h2>\n\n                {response && <p className={ response.includes(\"successfully\") ? \"message\" : \"expired-message\" }>{response}</p>}\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"password\"\n                            placeholder=\"New Password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            required\n                            disabled={!tokenValid}\n                            className={!tokenValid ? \"disabled\" : \"\"}\n                        />\n                    </div>\n\n                    <div className=\"input-group\">\n                        <input\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                            required\n                            disabled={!tokenValid}\n                            className={!tokenValid ? \"disabled\" : \"\"}\n                        />\n                    </div>                                        \n\n                    <button type=\"submit\" className={`submit-btn ${!tokenValid ? \"disabled\" : \"\"}`} disabled={!tokenValid}>\n                        Reset Password\n                    </button>\n                </form>\n            </div>\n        </div>\n        </div>\n    );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}