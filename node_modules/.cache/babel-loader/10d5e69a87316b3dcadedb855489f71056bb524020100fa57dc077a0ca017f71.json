{"ast":null,"code":"import secret from\"../files/default_secret_key.json\";const replacePlaceholders=rawText=>{let updatedText=rawText;// Retrieve stored test token from local storage\nlet t_data=localStorage.getItem(\"t_data\");let testToken=JSON.parse(t_data||\"{}\")[\"test-token\"];// Replace \"access-token\" if testToken is available\nif(testToken){updatedText=updatedText.replace(/\"access-token\\s*\"\\s*:\\s*\"(.*?)\"/,`\"access-token\": \"${testToken}\"`);}// Retrieve stored client email from local storage\nconst userData=JSON.parse(localStorage.getItem(\"creds\")||\"{}\");const clientEmail=userData.email||\"your-email@gmail.com\";// Replace \"client-email\"\nupdatedText=updatedText.replace(/\"client-email\\s*\"\\s*:\\s*\"(.*?)\"/,`\"client-email\": \"${clientEmail}\"`);// Replace \"private-key\" with secret key from JSON file\nupdatedText=updatedText.replace(/\"private-key\\s*\"\\s*:\\s*\"(.*?)\"/,`\"private-key\": \"${secret[\"secret-key\"].replaceAll(\"\\n\",\"\\\\n\")}\"`);return updatedText.replaceAll(\"\\n\",\" \");};export default replacePlaceholders;","map":{"version":3,"names":["secret","replacePlaceholders","rawText","updatedText","t_data","localStorage","getItem","testToken","JSON","parse","replace","userData","clientEmail","email","replaceAll"],"sources":["/data/data/com.termux/files/home/jWTFcm/clients/pushnotify-api/src/functions/replacePlaceholders.js"],"sourcesContent":["import secret from \"../files/default_secret_key.json\";\n\nconst replacePlaceholders = (rawText) => {\n  let updatedText = rawText;\n\n  // Retrieve stored test token from local storage\n  let t_data = localStorage.getItem(\"t_data\");\n  let testToken = JSON.parse(t_data || \"{}\")[\"test-token\"];\n\n  // Replace \"access-token\" if testToken is available\n  if (testToken) {\n    updatedText = updatedText.replace(/\"access-token\\s*\"\\s*:\\s*\"(.*?)\"/, `\"access-token\": \"${testToken}\"`);\n  }\n\n  // Retrieve stored client email from local storage\n  const userData = JSON.parse(localStorage.getItem(\"creds\") || \"{}\");\n  const clientEmail = userData.email || \"your-email@gmail.com\";\n\n  // Replace \"client-email\"\n  updatedText = updatedText.replace(/\"client-email\\s*\"\\s*:\\s*\"(.*?)\"/, `\"client-email\": \"${clientEmail}\"`);\n\n  // Replace \"private-key\" with secret key from JSON file\n  updatedText = updatedText.replace(/\"private-key\\s*\"\\s*:\\s*\"(.*?)\"/, `\"private-key\": \"${secret[\"secret-key\"].replaceAll(\"\\n\",\"\\\\n\")}\"`);\n\n  return updatedText.replaceAll(\"\\n\", \" \");\n};\n\nexport default replacePlaceholders;\n\n\n\n\n\n"],"mappings":"AAAA,MAAO,CAAAA,MAAM,KAAM,kCAAkC,CAErD,KAAM,CAAAC,mBAAmB,CAAIC,OAAO,EAAK,CACvC,GAAI,CAAAC,WAAW,CAAGD,OAAO,CAEzB;AACA,GAAI,CAAAE,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAC3C,GAAI,CAAAC,SAAS,CAAGC,IAAI,CAACC,KAAK,CAACL,MAAM,EAAI,IAAI,CAAC,CAAC,YAAY,CAAC,CAExD;AACA,GAAIG,SAAS,CAAE,CACbJ,WAAW,CAAGA,WAAW,CAACO,OAAO,CAAC,iCAAiC,CAAE,oBAAoBH,SAAS,GAAG,CAAC,CACxG,CAEA;AACA,KAAM,CAAAI,QAAQ,CAAGH,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,IAAI,CAAC,CAClE,KAAM,CAAAM,WAAW,CAAGD,QAAQ,CAACE,KAAK,EAAI,sBAAsB,CAE5D;AACAV,WAAW,CAAGA,WAAW,CAACO,OAAO,CAAC,iCAAiC,CAAE,oBAAoBE,WAAW,GAAG,CAAC,CAExG;AACAT,WAAW,CAAGA,WAAW,CAACO,OAAO,CAAC,gCAAgC,CAAE,mBAAmBV,MAAM,CAAC,YAAY,CAAC,CAACc,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAEtI,MAAO,CAAAX,WAAW,CAACW,UAAU,CAAC,IAAI,CAAE,GAAG,CAAC,CAC1C,CAAC,CAED,cAAe,CAAAb,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}