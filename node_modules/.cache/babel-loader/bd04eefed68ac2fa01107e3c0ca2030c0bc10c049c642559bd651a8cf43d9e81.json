{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import replacePlaceholders from\"../functions/replacePlaceholders\";import\"../styles/CodeBlock.scss\";// Highlight code syntax\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const highlightCode=code=>{return code.replace(/</g,\"&lt;\")// Escape <\n.replace(/>/g,\"&gt;\")// Escape >\n.replace(/(\"[^\"]*\")(?=\\s*:)/g,'<span style=\"color: #df3079\">$1</span>')// Keys in red\n.replace(/:\\s*(\"[^\"]*\"|\\d+)/g,': <span style=\"color: #00a57d\">$1</span>');// Values in green\n};// Language extension mapping\nconst languageExtensions={python:\"py\",nodejs:\"js\",javascript:\"js\",java:\"java\",'c++':\"cpp\",c:\"c\",html:\"html\",css:\"css\",json:\"json\",xml:\"xml\"};const CodeBlock=_ref=>{let{className,mode,step,language,code}=_ref;// Get correct file extension\nconst fileExtension=languageExtensions[language===null||language===void 0?void 0:language.toLowerCase()]||language;const fileName=`${step===null||step===void 0?void 0:step.replaceAll(\" \",\"_\")}.${fileExtension}`;// Generate file name\nconst storageKey=React.useMemo(()=>`codeblock_${step}_${language}`,[step,language]);// Unique key\nconst[isEditable,setIsEditable]=useState(false);const[editableCode,setEditableCode]=useState(code);const[highlightedCode,setHighlightedCode]=useState(\"\");const preRef=useRef(null);// Load saved code on mount\nuseEffect(()=>{const savedCode=localStorage.getItem(storageKey);setEditableCode(savedCode||code);},[code,storageKey]);// Update highlighted code when editableCode changes\nuseEffect(()=>{setHighlightedCode(highlightCode(editableCode));},[editableCode]);const copyToClipboard=()=>{navigator.clipboard.writeText(replacePlaceholders(editableCode));};const toggleEdit=()=>{if(isEditable){var _preRef$current;const updatedText=((_preRef$current=preRef.current)===null||_preRef$current===void 0?void 0:_preRef$current.innerText)||editableCode;setEditableCode(updatedText);localStorage.setItem(storageKey,updatedText);// Save changes\n}setIsEditable(prev=>!prev);};return code===\"no response\"?null:/*#__PURE__*/_jsxs(\"div\",{className:`code-container ${className}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex jcfe aife\",children:[mode!==\"minimal\"?/*#__PURE__*/_jsx(\"div\",{style:{marginRight:\"auto\",color:\"grey\",fontSize:\"12px\"},className:\"file-name\",children:fileName}):\"\",/*#__PURE__*/_jsxs(\"div\",{className:\"flex jcfe btn-container\",children:[mode!==\"minimal\"&&/*#__PURE__*/_jsx(\"button\",{className:\"edit-btn copy-btn\",onClick:toggleEdit,children:isEditable?\"Save\":\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-btn\",onClick:copyToClipboard,children:\"Copy\"})]})]}),/*#__PURE__*/_jsx(\"pre\",{ref:preRef,contentEditable:isEditable,suppressContentEditableWarning:true,children:/*#__PURE__*/_jsx(\"code\",{className:\"language-json\",dangerouslySetInnerHTML:{__html:highlightedCode}})})]});};export default CodeBlock;","map":{"version":3,"names":["React","useState","useEffect","useRef","replacePlaceholders","jsx","_jsx","jsxs","_jsxs","highlightCode","code","replace","languageExtensions","python","nodejs","javascript","java","c","html","css","json","xml","CodeBlock","_ref","className","mode","step","language","fileExtension","toLowerCase","fileName","replaceAll","storageKey","useMemo","isEditable","setIsEditable","editableCode","setEditableCode","highlightedCode","setHighlightedCode","preRef","savedCode","localStorage","getItem","copyToClipboard","navigator","clipboard","writeText","toggleEdit","_preRef$current","updatedText","current","innerText","setItem","prev","children","style","marginRight","color","fontSize","onClick","ref","contentEditable","suppressContentEditableWarning","dangerouslySetInnerHTML","__html"],"sources":["/data/data/com.termux/files/home/jWTFcm/clients/pushnotify-api/src/components/CodeBlock.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport replacePlaceholders from \"../functions/replacePlaceholders\";\nimport \"../styles/CodeBlock.scss\";\n\n// Highlight code syntax\nconst highlightCode = (code) => {\n  return code\n    .replace(/</g, \"&lt;\") // Escape <\n    .replace(/>/g, \"&gt;\") // Escape >\n    .replace(/(\"[^\"]*\")(?=\\s*:)/g, '<span style=\"color: #df3079\">$1</span>') // Keys in red\n    .replace(/:\\s*(\"[^\"]*\"|\\d+)/g, ': <span style=\"color: #00a57d\">$1</span>'); // Values in green\n};\n\n// Language extension mapping\nconst languageExtensions = {\n  python: \"py\",\n  nodejs: \"js\",\n  javascript: \"js\",\n  java: \"java\",\n  'c++': \"cpp\",\n  c: \"c\",\n  html: \"html\",\n  css: \"css\",\n  json: \"json\",\n  xml: \"xml\",\n};\n\nconst CodeBlock = ({ className, mode, step, language, code }) => {  \n\n  // Get correct file extension\n  const fileExtension = languageExtensions[language?.toLowerCase()] || language;\n  const fileName = `${step?.replaceAll(\" \", \"_\")}.${fileExtension}`; // Generate file name\n\n  const storageKey = React.useMemo(() => `codeblock_${step}_${language}`, [step, language]); // Unique key\n  const [isEditable, setIsEditable] = useState(false);\n  const [editableCode, setEditableCode] = useState(code);\n  \n  const [highlightedCode, setHighlightedCode] = useState(\"\");\n  const preRef = useRef(null);\n\n  // Load saved code on mount\n  useEffect(() => {\n    const savedCode = localStorage.getItem(storageKey);\n    setEditableCode(savedCode || code);\n  }, [code, storageKey]);\n\n  // Update highlighted code when editableCode changes\n  useEffect(() => {\n    setHighlightedCode(highlightCode(editableCode));\n  }, [editableCode]);\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(replacePlaceholders(editableCode));\n  };\n\n  const toggleEdit = () => {\n    if (isEditable) {\n      const updatedText = preRef.current?.innerText || editableCode;\n      setEditableCode(updatedText);\n      localStorage.setItem(storageKey, updatedText); // Save changes\n    }\n    setIsEditable((prev) => !prev);\n  };\n\n  return code === \"no response\" ? null : (\n    <div className={`code-container ${className}`}>\n      {/* File Name at Top Left */}\n      <div className=\"flex jcfe aife\">\n        {mode!==\"minimal\" ? <div style={{ marginRight: \"auto\", color: \"grey\", fontSize: \"12px\" }} className=\"file-name\">\n          {fileName}\n        </div> : \"\"}\n\n        <div className=\"flex jcfe btn-container\">\n          {mode !== \"minimal\" && (\n            <button className=\"edit-btn copy-btn\" onClick={toggleEdit}>\n              {isEditable ? \"Save\" : \"Edit\"}\n            </button>\n          )}\n          <button className=\"copy-btn\" onClick={copyToClipboard}>Copy</button>\n        </div>\n      </div>\n\n      <pre ref={preRef} contentEditable={isEditable} suppressContentEditableWarning={true}>\n        <code className=\"language-json\" dangerouslySetInnerHTML={{ __html: highlightedCode }}></code>\n      </pre>\n    </div>\n  );\n};\n\nexport default CodeBlock;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}