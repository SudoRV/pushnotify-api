{"ast":null,"code":"import\"../styles/ApiDocs.scss\";import CodeBlock from\"./CodeBlock\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ApiDocs=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"container apidocs\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"api-name\",children:\"PushNotify API \\uD83D\\uDE80\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"A powerful API to generate JWT tokens, store device tokens, and send push notifications with ease.\"})}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCCC About PushNotify API\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"PushNotify API simplifies\",\" \",/*#__PURE__*/_jsx(\"strong\",{children:\"Firebase Cloud Messaging (FCM) for IoT devices, low-end microcontrollers, and web applications\"}),\" \",\"by handling the complexities of authentication and message delivery.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"Many \",/*#__PURE__*/_jsx(\"strong\",{children:\"low-end devices, such as ESP8266 and ESP32\"}),\", lack the processing power to generate JWT tokens required for FCM authentication. PushNotify solves this by\",\" \",/*#__PURE__*/_jsx(\"strong\",{children:\"offloading JWT signing and Firebase token management to a cloud-based API\"}),\", allowing resource-constrained devices to send push notifications with minimal overhead.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"With \",/*#__PURE__*/_jsx(\"strong\",{children:\"secure device token storage\"}),\",\",\" \",/*#__PURE__*/_jsx(\"strong\",{children:\"automated Firebase access token handling\"}),\", and\",\" \",/*#__PURE__*/_jsx(\"strong\",{children:\"a simple API for triggering notifications\"}),\", PushNotify ensures reliable communication for both high-performance applications and lightweight microcontroller-based systems.\"]}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u26A0\\uFE0F Problem Statement\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Challenges in traditional push notification implementations:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"JWT Token Generation:\"}),\" Microcontrollers can't generate JWT tokens for Firebase.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Device Token Management:\"}),\" Storing and handling multiple device tokens is complex.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Push Notification Complexity:\"}),\" Managing authentication and API calls is difficult.\"]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u2705 Solution: PushNotify API\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Automated JWT Generation:\"}),\" No need for device-side token signing.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Effortless Device Registration:\"}),\" Stores and updates device tokens easily.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"One-Step Push Notifications:\"}),\" A single request sends messages to registered devices.\"]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDD27 How to Use the API\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Base URL:\"})}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",code:\"https://bsuf2bagnak4a7bcn2244z2ymi0ikygr.lambda-url.eu-north-1.on.aws/\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Send Post request in the above url along with the body structure as shown below.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Use access token in the body, you'll be provided a test token for that in the user dashboard which is free for development.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 For production use, you'll be needed to one time purchase for the api access token.\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCCC API Endpoints\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"1\\uFE0F\\u20E3 Generate JWT Token\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Use this endpoint to generate a Firebase authentication token (JWT). (\",\" \",/*#__PURE__*/_jsx(\"i\",{children:\"use your custom server, no need for further steps.\"}),\" )\"]}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",code:`{\n    \"type\": \"generate-jwt\",\n    \"access-token\": \"your-access-token\",\n    \"client-email\": \"your-service-account-client-email\",\n    \"private-key\": \"your-service-account-private-key\"\n}`}),/*#__PURE__*/_jsx(\"h4\",{children:\"\\u2705 Sample Response:\"}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",code:`{\n    \"payload\": {\n        \"iss\": \"your-service-account-client-email\",\n        \"scope\": \"https://www.googleapis.com/auth/firebase.messaging\",\n        \"aud\": \"https://oauth2.googleapis.com/token\",\n        \"iat\": 1710234567,\n        \"exp\": 1710238167\n    },\n    \"jwt\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjEyMzQ1Njc4OT...\"\n}`,className:\"sample-response\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"2\\uFE0F\\u20E3 Save Device Token (Receiver Side)\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Register a device token and receive a unique device ID. This process is handled from the app side (receiver side).\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" Store the device ID for further use.\"]}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",code:`{  \n    \"type\": \"save-token\",\n    \"access-token\": \"your-access-token\",  \n    \"device-token\": \"your_fcm_token\"  \n}`}),/*#__PURE__*/_jsx(\"h4\",{children:\"\\u2705 Sample Response:\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 If new device token registered.\"}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",code:`{\n    \"message\": \"New device token saved\",\n    \"device_id\": \"abc123def456ghi7\"\n}`}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 If device token updated.\"}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",code:`{\n    \"message\": \"Device token updated\",\n    \"device_id\": \"existing-device-id\"\n}`,className:\"sample-response\"}),/*#__PURE__*/_jsx(\"h2\",{style:{color:\"red\",marginBottom:\"8px\"},children:\"Error Handling\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"\\u2022 If Access Token Not Passed.\"}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",code:`{\n    \"type\": \"error\",\n    \"message\": \"Unauthorized Access\"\n}`}),/*#__PURE__*/_jsx(\"h4\",{children:\"\\u2022 If Access Token Not Registered.\"}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",code:`{\n    \"type\": \"error\",\n    \"message\": \"Invalid Access Token\"\n}`,className:\"sample-response\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"3\\uFE0F\\u20E3 Send Push Notification (Sender / IoT Device Side)\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Send a notification from the IoT device (sender side) to a registered device using its unique ID.\"}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",code:`{  \n    \"type\": \"push-fcm\",  \n    \"access-token\": \"your-access-token\",\n    \"device-id\": \"your_device_id\",  \n    \"title\": \"Hello!\",  \n    \"body\": \"This is a test notification\",  \n    \"payload\": { \"key\": \"value\" }  \n}`}),/*#__PURE__*/_jsx(\"h4\",{children:\"\\u2705 Sample Response:\"}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",code:`{\n    \"success\": true,\n    \"message\": \"Notification sent successfully\"\n}`,className:\"sample-response\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDEE0 Test the API with cURL\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"1\\uFE0F\\u20E3 Generate JWT Token\"}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",code:`curl -X POST \"https://bsuf2bagnak4a7bcn2244z2ymi0ikygr.lambda-url.eu-north-1.on.aws/\" \\ \n-H \"Content-Type: application/json\" \\  \n-d '{\"type\":\"generate-jwt\",\"access-token\": \"your-access-token\",\"client-email\":\"your-email\",\"private-key\":\"your-private-key\"}'`}),/*#__PURE__*/_jsx(\"h3\",{children:\"2\\uFE0F\\u20E3 Save Device Token\"}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",code:`curl -X POST \"https://bsuf2bagnak4a7bcn2244z2ymi0ikygr.lambda-url.eu-north-1.on.aws/\" \\  \n-H \"Content-Type: application/json\" \\  \n-d '{\"type\":\"save-token\",\"access-token\": \"your-access-token\", \"device-token\":\"your_fcm_token\"}'`}),/*#__PURE__*/_jsx(\"h3\",{children:\"3\\uFE0F\\u20E3 Send Push Notification\"}),/*#__PURE__*/_jsx(CodeBlock,{mode:\"minimal\",langaug:\"curl\",code:`curl -X POST \"https://bsuf2bagnak4a7bcn2244z2ymi0ikygr.lambda-url.eu-north-1.on.aws/\" \\  \n-H \"Content-Type: application/json\" \\  \n-d '{\"type\":\"push-fcm\", \"access-token\": \"your-access-token\",\"device-id\":\"your_device_id\",\"title\":\"Hello\",\"body\":\"Test Message\",\"payload\":{\"key\":\"value\"}}'`})]});};export default ApiDocs;","map":{"version":3,"names":["CodeBlock","jsx","_jsx","jsxs","_jsxs","ApiDocs","className","children","mode","code","style","color","marginBottom","langaug"],"sources":["/data/data/com.termux/files/home/jWTFcm/clients/pushnotify-api/src/components/ApiDocs.js"],"sourcesContent":["import \"../styles/ApiDocs.scss\";\nimport CodeBlock from \"./CodeBlock\";\n\nconst ApiDocs = () => {\n  return (\n    <div className=\"container apidocs\">\n      <h2 className=\"api-name\">PushNotify API 🚀</h2>\n      <p>\n        <strong>\n          A powerful API to generate JWT tokens, store device tokens, and send\n          push notifications with ease.\n        </strong>\n      </p>\n\n      <h2>📌 About PushNotify API</h2>\n      <p>\n        PushNotify API simplifies{\" \"}\n        <strong>\n          Firebase Cloud Messaging (FCM) for IoT devices, low-end\n          microcontrollers, and web applications\n        </strong>{\" \"}\n        by handling the complexities of authentication and message delivery.\n        <br />\n        <br />\n        Many <strong>low-end devices, such as ESP8266 and ESP32</strong>, lack\n        the processing power to generate JWT tokens required for FCM\n        authentication. PushNotify solves this by{\" \"}\n        <strong>\n          offloading JWT signing and Firebase token management to a cloud-based\n          API\n        </strong>\n        , allowing resource-constrained devices to send push notifications with\n        minimal overhead.\n        <br />\n        <br />\n        With <strong>secure device token storage</strong>,{\" \"}\n        <strong>automated Firebase access token handling</strong>, and{\" \"}\n        <strong>a simple API for triggering notifications</strong>, PushNotify\n        ensures reliable communication for both high-performance applications\n        and lightweight microcontroller-based systems.\n      </p>\n\n      <h2>⚠️ Problem Statement</h2>\n      <p>Challenges in traditional push notification implementations:</p>\n      <ul>\n        <li>\n          <strong>JWT Token Generation:</strong> Microcontrollers can't generate\n          JWT tokens for Firebase.\n        </li>\n        <li>\n          <strong>Device Token Management:</strong> Storing and handling\n          multiple device tokens is complex.\n        </li>\n        <li>\n          <strong>Push Notification Complexity:</strong> Managing authentication\n          and API calls is difficult.\n        </li>\n      </ul>\n\n      <h2>✅ Solution: PushNotify API</h2>\n      <ul>\n        <li>\n          <strong>Automated JWT Generation:</strong> No need for device-side\n          token signing.\n        </li>\n        <li>\n          <strong>Effortless Device Registration:</strong> Stores and updates\n          device tokens easily.\n        </li>\n        <li>\n          <strong>One-Step Push Notifications:</strong> A single request sends\n          messages to registered devices.\n        </li>\n      </ul>\n\n      <h2>🔧 How to Use the API</h2>\n      <p>\n        <strong>Base URL:</strong>\n      </p>\n\n      <CodeBlock\n        mode=\"minimal\"\n        code=\"https://bsuf2bagnak4a7bcn2244z2ymi0ikygr.lambda-url.eu-north-1.on.aws/\"\n      />\n\n      <p>\n        • Send Post request in the above url along with the body structure as\n        shown below.\n      </p>\n      <p>\n        • Use access token in the body, you'll be provided a test token for that\n        in the user dashboard which is free for development.\n      </p>\n      <p>\n        • For production use, you'll be needed to one time purchase for the api\n        access token.\n      </p>\n\n      <h2>📌 API Endpoints</h2>\n\n      <h3>1️⃣ Generate JWT Token</h3>\n      <p>\n        Use this endpoint to generate a Firebase authentication token (JWT). ({\" \"}\n        <i>use your custom server, no need for further steps.</i> )\n      </p>\n\n      <CodeBlock\n        mode=\"minimal\"\n        code={`{\n    \"type\": \"generate-jwt\",\n    \"access-token\": \"your-access-token\",\n    \"client-email\": \"your-service-account-client-email\",\n    \"private-key\": \"your-service-account-private-key\"\n}`}\n      />\n\n      <h4>✅ Sample Response:</h4>\n      <CodeBlock\n        mode=\"minimal\"\n        code={`{\n    \"payload\": {\n        \"iss\": \"your-service-account-client-email\",\n        \"scope\": \"https://www.googleapis.com/auth/firebase.messaging\",\n        \"aud\": \"https://oauth2.googleapis.com/token\",\n        \"iat\": 1710234567,\n        \"exp\": 1710238167\n    },\n    \"jwt\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjEyMzQ1Njc4OT...\"\n}`}\n        className=\"sample-response\"\n      />\n\n      <h3>2️⃣ Save Device Token (Receiver Side)</h3>\n      <p>\n        Register a device token and receive a unique device ID. This process is\n        handled from the app side (receiver side).\n      </p>\n      <p>\n        <strong>Note:</strong> Store the device ID for further use.\n      </p>\n\n      <CodeBlock\n        mode=\"minimal\"\n        code={`{  \n    \"type\": \"save-token\",\n    \"access-token\": \"your-access-token\",  \n    \"device-token\": \"your_fcm_token\"  \n}`}\n      />\n\n      <h4>✅ Sample Response:</h4>\n      <p>• If new device token registered.</p>\n      <CodeBlock\n        mode=\"minimal\"\n        code={`{\n    \"message\": \"New device token saved\",\n    \"device_id\": \"abc123def456ghi7\"\n}`}\n      />\n\n      <p>• If device token updated.</p>\n      <CodeBlock\n        mode=\"minimal\"\n        code={`{\n    \"message\": \"Device token updated\",\n    \"device_id\": \"existing-device-id\"\n}`}\n        className=\"sample-response\"\n      />\n\n      <h2 style={{ color: \"red\", marginBottom: \"8px\" }}>Error Handling</h2>\n      <h4>• If Access Token Not Passed.</h4>\n      <CodeBlock\n        mode=\"minimal\"\n        code={`{\n    \"type\": \"error\",\n    \"message\": \"Unauthorized Access\"\n}`}\n      />\n\n      <h4>• If Access Token Not Registered.</h4>\n      <CodeBlock\n        mode=\"minimal\"\n        code={`{\n    \"type\": \"error\",\n    \"message\": \"Invalid Access Token\"\n}`}\n        className=\"sample-response\"\n      />\n\n      <h3>3️⃣ Send Push Notification (Sender / IoT Device Side)</h3>\n      <p>\n        Send a notification from the IoT device (sender side) to a registered\n        device using its unique ID.\n      </p>\n\n      <CodeBlock\n        mode=\"minimal\"\n        code={`{  \n    \"type\": \"push-fcm\",  \n    \"access-token\": \"your-access-token\",\n    \"device-id\": \"your_device_id\",  \n    \"title\": \"Hello!\",  \n    \"body\": \"This is a test notification\",  \n    \"payload\": { \"key\": \"value\" }  \n}`}\n      />\n\n      <h4>✅ Sample Response:</h4>\n      <CodeBlock\n        mode=\"minimal\"\n        code={`{\n    \"success\": true,\n    \"message\": \"Notification sent successfully\"\n}`}\n        className=\"sample-response\"\n      />\n\n      <h2>🛠 Test the API with cURL</h2>\n\n      <h3>1️⃣ Generate JWT Token</h3>\n      <CodeBlock\n        mode=\"minimal\"\n        code={`curl -X POST \"https://bsuf2bagnak4a7bcn2244z2ymi0ikygr.lambda-url.eu-north-1.on.aws/\" \\ \n-H \"Content-Type: application/json\" \\  \n-d '{\"type\":\"generate-jwt\",\"access-token\": \"your-access-token\",\"client-email\":\"your-email\",\"private-key\":\"your-private-key\"}'`}\n      />\n\n      <h3>2️⃣ Save Device Token</h3>\n      <CodeBlock\n        mode=\"minimal\"\n        code={`curl -X POST \"https://bsuf2bagnak4a7bcn2244z2ymi0ikygr.lambda-url.eu-north-1.on.aws/\" \\  \n-H \"Content-Type: application/json\" \\  \n-d '{\"type\":\"save-token\",\"access-token\": \"your-access-token\", \"device-token\":\"your_fcm_token\"}'`}\n      />\n\n      <h3>3️⃣ Send Push Notification</h3>\n      <CodeBlock\n        mode=\"minimal\"\n        langaug=\"curl\"\n        code={`curl -X POST \"https://bsuf2bagnak4a7bcn2244z2ymi0ikygr.lambda-url.eu-north-1.on.aws/\" \\  \n-H \"Content-Type: application/json\" \\  \n-d '{\"type\":\"push-fcm\", \"access-token\": \"your-access-token\",\"device-id\":\"your_device_id\",\"title\":\"Hello\",\"body\":\"Test Message\",\"payload\":{\"key\":\"value\"}}'`}\n      />\n    </div>\n  );\n};\n\nexport default ApiDocs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}